name: Flutter CI with Firebase

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup Java (needed for Gradle)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3Ô∏è‚É£ Setup Flutter
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.8"  # Fixed version number

      # 4Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # 5Ô∏è‚É£ Check if secrets exist and create google-services.json
      - name: Check GitHub Secrets and Create JSON
        run: |
          echo "Checking if secrets are set..."
          if [ -z "${{ secrets.GOOGLE_SERVICES_JSON }}" ]; then
            echo "‚ùå GOOGLE_SERVICES_JSON secret is NOT SET or EMPTY"
            exit 1
          else
            echo "‚úÖ GOOGLE_SERVICES_JSON secret exists"
            echo "Secret length: $(echo '${{ secrets.GOOGLE_SERVICES_JSON }}' | wc -c)"
          fi
          
          # Create the JSON file
          mkdir -p android/app
          echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json

      # 6Ô∏è‚É£ Validate the created JSON
      - name: Validate google-services.json
        run: |
          echo "=== File created successfully ==="
          ls -la android/app/google-services.json
          echo ""
          echo "=== File size ==="
          du -h android/app/google-services.json
          echo ""
          echo "=== JSON validation ==="
          if python3 -m json.tool android/app/google-services.json > /dev/null; then
            echo "‚úÖ JSON is valid"
          else
            echo "‚ùå JSON is invalid, showing content:"
            cat android/app/google-services.json
            echo ""
            echo "Attempting to fix common issues..."
            # Remove potential BOM and normalize
            sed -i '1s/^\xEF\xBB\xBF//' android/app/google-services.json
            # Try validation again
            if python3 -m json.tool android/app/google-services.json > /dev/null; then
              echo "‚úÖ JSON fixed and is now valid"
            else
              echo "‚ùå JSON still invalid after cleanup"
              exit 1
            fi
          fi

      # 7Ô∏è‚É£ Install Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # 8Ô∏è‚É£ Authenticate Firebase
      - name: Firebase login
        run: firebase use --add deployment-8eb89 --token "${{ secrets.FIREBASE_TOKEN }}"

      # 9Ô∏è‚É£ Run tests
      - name: Run tests
        run: flutter test || true

      # üîü Clean before build
      - name: Clean Flutter
        run: flutter clean && flutter pub get

      # 1Ô∏è‚É£1Ô∏è‚É£ Build release APK
      - name: Build APK
        run: flutter build apk --release

      # 1Ô∏è‚É£2Ô∏è‚É£ Upload APK to artifacts
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk
#
#      # 1Ô∏è‚É£3Ô∏è‚É£ Upload APK to Firebase App Distribution (optional)
#      - name: Deploy to Firebase App Distribution
#        if: github.ref == 'refs/heads/main'  # Only deploy on main branch
#        run: |
#          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
#            --app ${{ secrets.FIREBASE_APP_ID }} \
#            --token "${{ secrets.FIREBASE_TOKEN }}" \
#            --groups "testers" || echo "Firebase App Distribution failed, but continuing..."