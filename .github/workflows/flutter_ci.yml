name: Flutter CI with Firebase

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup Java (needed for Gradle)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3Ô∏è‚É£ Setup Flutter
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.8"  # Fixed version number

      # 4Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # 5Ô∏è‚É£ Add google-services.json (Firebase config) - MULTIPLE METHODS
      - name: Create google-services.json (Method 1 - Direct)
        run: |
          mkdir -p android/app
          echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json

      # 6Ô∏è‚É£ Comprehensive debugging
      - name: Debug google-services.json
        run: |
          echo "=== File exists check ==="
          ls -la android/app/google-services.json
          echo ""
          echo "=== File size ==="
          du -h android/app/google-services.json
          echo ""
          echo "=== File content (first 500 chars) ==="
          head -c 500 android/app/google-services.json
          echo ""
          echo "=== File content (last 500 chars) ==="
          tail -c 500 android/app/google-services.json
          echo ""
          echo "=== Hexdump (first 100 bytes) ==="
          hexdump -C android/app/google-services.json | head -10
          echo ""
          echo "=== JSON validation ==="
          python3 -m json.tool android/app/google-services.json > /dev/null && echo "‚úÖ JSON is valid" || echo "‚ùå JSON is invalid"
          echo ""
          echo "=== File encoding check ==="
          file android/app/google-services.json
          echo ""
          echo "=== Character count ==="
          wc -c android/app/google-services.json

      # 6Ô∏è‚É£B Alternative method if first fails
      - name: Try Base64 method (if previous failed)
        run: |
          if ! python3 -m json.tool android/app/google-services.json > /dev/null 2>&1; then
            echo "First method failed, trying Base64..."
            echo "${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}" | base64 -d > android/app/google-services.json
            echo "=== After Base64 decode ==="
            python3 -m json.tool android/app/google-services.json > /dev/null && echo "‚úÖ JSON is now valid" || echo "‚ùå JSON still invalid"
          fi

      # 6Ô∏è‚É£C Last resort - hardcoded (temporary debug)
      - name: Hardcoded JSON (debug only)
        run: |
          if ! python3 -m json.tool android/app/google-services.json > /dev/null 2>&1; then
            echo "All methods failed, using hardcoded JSON..."
            cat > android/app/google-services.json << 'HARDCODED'
            {
              "project_info": {
                "project_number": "645587036902",
                "project_id": "deployment-8eb89",
                "storage_bucket": "deployment-8eb89.firebasestorage.app"
              },
              "client": [
                {
                  "client_info": {
                    "mobilesdk_app_id": "1:645587036902:android:e83a899c8ca823aa26a927",
                    "android_client_info": {
                      "package_name": "com.example.testing_flutter"
                    }
                  },
                  "oauth_client": [],
                  "api_key": [
                    {
                      "current_key": "AIzaSyCoF2YB954VPbLyDrIxJ-F8zDzVXyuE2_s"
                    }
                  ],
                  "services": {
                    "appinvite_service": {
                      "other_platform_oauth_client": []
                    }
                  }
                }
              ],
              "configuration_version": "1"
            }
            HARDCODED
            echo "=== Hardcoded JSON validation ==="
            python3 -m json.tool android/app/google-services.json > /dev/null && echo "‚úÖ Hardcoded JSON is valid" || echo "‚ùå Hardcoded JSON failed"
          fi

      # 7Ô∏è‚É£ Install Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # 8Ô∏è‚É£ Authenticate Firebase
      - name: Firebase login
        run: firebase use --add deployment-8eb89 --token "${{ secrets.FIREBASE_TOKEN }}"

      # 9Ô∏è‚É£ Run tests
      - name: Run tests
        run: flutter test || true

      # üîü Clean before build
      - name: Clean Flutter
        run: flutter clean && flutter pub get

      # 1Ô∏è‚É£1Ô∏è‚É£ Build release APK
      - name: Build APK
        run: flutter build apk --release

      # 1Ô∏è‚É£2Ô∏è‚É£ Upload APK to artifacts
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

#      # 1Ô∏è‚É£3Ô∏è‚É£ Upload APK to Firebase App Distribution (optional)
#      - name: Deploy to Firebase App Distribution
#        if: github.ref == 'refs/heads/main'  # Only deploy on main branch
#        run: |
#          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
#            --app ${{ secrets.FIREBASE_APP_ID }} \
#            --token "${{ secrets.FIREBASE_TOKEN }}" \
#            --groups "testers" || echo "Firebase App Distribution failed, but continuing..."